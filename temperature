#include <DHT.h>  // Include DHT sensor library

#define DHT_PIN 4         // Pin connected to DHT sensor (adjust as needed)
#define DHT_TYPE DHT22    // Use DHT22 sensor (adjust if you're using another model)
#define CONTROL_PIN 19    // ESP GPIO pin connected to the Mist Maker (MOSFET gate)

// Initialize DHT sensor
DHT dht(DHT_PIN, DHT_TYPE);

bool mistMakerState = false;  // Keeps track of the Mist Maker state (OFF initially)
unsigned long previousMillis = 0;  // Timer variable for non-blocking delay
const long interval = 5000;        // 5 seconds delay between humidity/temperature readings

void setup() {
  pinMode(CONTROL_PIN, OUTPUT);  // Set Mist Maker pin as output
  digitalWrite(CONTROL_PIN, LOW);  // Start with Mist Maker OFF
  
  Serial.begin(9600);  // Start serial communication at 9600 baud rate
  dht.begin();         // Initialize DHT sensor
  
  Serial.println("Humidity and Temperature Monitor Initialized.");
  Serial.println("Type '1' in the Serial Monitor to toggle the Mist Maker ON/OFF manually.");
}

void loop() {
  unsigned long currentMillis = millis();

  // Read temperature and humidity every 5 seconds (non-blocking)
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;  // Reset the timer

    float humidity = dht.readHumidity();
    float temperature = dht.readTemperature();  // Temperature in Celsius

    if (isnan(humidity) || isnan(temperature)) {
      Serial.println("Failed to read from DHT sensor!");
    } else {
      // Display temperature and humidity values
      Serial.print("Temperature: ");
      Serial.print(temperature);
      Serial.print(" Â°C\t");
      Serial.print("Humidity: ");
      Serial.print(humidity);
      Serial.println(" %");

      // Check humidity and turn on Mist Maker automatically if below 70%
      if (humidity < 70) {
        Serial.println("Humidity is low! Turning on the Mist Maker.");
        digitalWrite(CONTROL_PIN, HIGH);  // Turn ON Mist Maker
        mistMakerState = true;  // Update the state variable
      }
    }
  }

  // Check if Serial Monitor input is available to toggle Mist Maker manually
  if (Serial.available() > 0) {
    char input = Serial.read();  // Read input from Serial Monitor

    if (input == '1') {
      mistMakerState = !mistMakerState;  // Toggle the Mist Maker state
      
      if (mistMakerState) {
        digitalWrite(CONTROL_PIN, HIGH);  // Turn ON Mist Maker
        Serial.println("Mist Maker ON (Manual)");
      } else {
        digitalWrite(CONTROL_PIN, LOW);   // Turn OFF Mist Maker
        Serial.println("Mist Maker OFF (Manual)");
      }
    }
  }
}